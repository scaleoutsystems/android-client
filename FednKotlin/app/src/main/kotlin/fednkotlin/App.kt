/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package fednkotlin

import com.example.fedn_client.FednClient
import com.example.fedn_client.IFednClient
import kotlinx.coroutines.runBlocking

val runTrainingProcess: (ByteArray) -> ByteArray = { modelIn ->
    // run training here

    modelIn
}

fun main() {

    runBlocking {
        val url: String? = System.getenv("FEDN_URL")
        val token: String? = System.getenv("FEDN_TOKEN")
        val name: String? = System.getenv("FEDN_NAME")

        if (url == null || token == null || name == null) {
            println("FEDN_URL, FEDN_TOKEN and FEDN_NAME must be set")
            return@runBlocking
        }

        println("FEDN_URL: $url")
        println("FEDN_TOKEN: $token")
        println("FEDN_NAME: $name")

        val fednClient: IFednClient = FednClient(url, token, name = name)

        val result =
                fednClient.runProcess(
                        runTrainingProcess,
                        onAttachStateChanged = { state -> println("onAssignStateChanged: $state") },
                        onUpdateModelStateChanged = { state ->
                            println("onUpdateModelStateChanged $state")
                        },
                        timeoutAfterMillis = 60000
                )

        println("Result: ${result?.first}")
    }

    println("Program ran to completion")
}
