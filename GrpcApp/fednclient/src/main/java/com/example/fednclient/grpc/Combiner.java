// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: fedn.proto

package com.example.fednclient.grpc;

/**
 * Protobuf service {@code grpc.Combiner}
 */
public  abstract class Combiner
    implements com.google.protobuf.Service {
  protected Combiner() {}

  public interface Interface {
    /**
     * <pre>
     * Stream endpoints for training/validation pub/sub
     * </pre>
     *
     * <code>rpc ModelUpdateRequestStream(.grpc.ClientAvailableMessage) returns (stream .grpc.ModelUpdateRequest);</code>
     */
    public abstract void modelUpdateRequestStream(
        com.google.protobuf.RpcController controller,
        com.example.fednclient.grpc.ClientAvailableMessage request,
        com.google.protobuf.RpcCallback<com.example.fednclient.grpc.ModelUpdateRequest> done);

    /**
     * <code>rpc ModelUpdateStream(.grpc.ClientAvailableMessage) returns (stream .grpc.ModelUpdate);</code>
     */
    public abstract void modelUpdateStream(
        com.google.protobuf.RpcController controller,
        com.example.fednclient.grpc.ClientAvailableMessage request,
        com.google.protobuf.RpcCallback<com.example.fednclient.grpc.ModelUpdate> done);

    /**
     * <code>rpc ModelValidationRequestStream(.grpc.ClientAvailableMessage) returns (stream .grpc.ModelValidationRequest);</code>
     */
    public abstract void modelValidationRequestStream(
        com.google.protobuf.RpcController controller,
        com.example.fednclient.grpc.ClientAvailableMessage request,
        com.google.protobuf.RpcCallback<com.example.fednclient.grpc.ModelValidationRequest> done);

    /**
     * <code>rpc ModelValidationStream(.grpc.ClientAvailableMessage) returns (stream .grpc.ModelValidation);</code>
     */
    public abstract void modelValidationStream(
        com.google.protobuf.RpcController controller,
        com.example.fednclient.grpc.ClientAvailableMessage request,
        com.google.protobuf.RpcCallback<com.example.fednclient.grpc.ModelValidation> done);

    /**
     * <code>rpc SendModelUpdateRequest(.grpc.ModelUpdateRequest) returns (.grpc.Response);</code>
     */
    public abstract void sendModelUpdateRequest(
        com.google.protobuf.RpcController controller,
        com.example.fednclient.grpc.ModelUpdateRequest request,
        com.google.protobuf.RpcCallback<com.example.fednclient.grpc.Response> done);

    /**
     * <code>rpc SendModelUpdate(.grpc.ModelUpdate) returns (.grpc.Response);</code>
     */
    public abstract void sendModelUpdate(
        com.google.protobuf.RpcController controller,
        com.example.fednclient.grpc.ModelUpdate request,
        com.google.protobuf.RpcCallback<com.example.fednclient.grpc.Response> done);

    /**
     * <code>rpc SendModelValidationRequest(.grpc.ModelValidationRequest) returns (.grpc.Response);</code>
     */
    public abstract void sendModelValidationRequest(
        com.google.protobuf.RpcController controller,
        com.example.fednclient.grpc.ModelValidationRequest request,
        com.google.protobuf.RpcCallback<com.example.fednclient.grpc.Response> done);

    /**
     * <code>rpc SendModelValidation(.grpc.ModelValidation) returns (.grpc.Response);</code>
     */
    public abstract void sendModelValidation(
        com.google.protobuf.RpcController controller,
        com.example.fednclient.grpc.ModelValidation request,
        com.google.protobuf.RpcCallback<com.example.fednclient.grpc.Response> done);

  }

  public static com.google.protobuf.Service newReflectiveService(
      final Interface impl) {
    return new Combiner() {
      @java.lang.Override
      public  void modelUpdateRequestStream(
          com.google.protobuf.RpcController controller,
          com.example.fednclient.grpc.ClientAvailableMessage request,
          com.google.protobuf.RpcCallback<com.example.fednclient.grpc.ModelUpdateRequest> done) {
        impl.modelUpdateRequestStream(controller, request, done);
      }

      @java.lang.Override
      public  void modelUpdateStream(
          com.google.protobuf.RpcController controller,
          com.example.fednclient.grpc.ClientAvailableMessage request,
          com.google.protobuf.RpcCallback<com.example.fednclient.grpc.ModelUpdate> done) {
        impl.modelUpdateStream(controller, request, done);
      }

      @java.lang.Override
      public  void modelValidationRequestStream(
          com.google.protobuf.RpcController controller,
          com.example.fednclient.grpc.ClientAvailableMessage request,
          com.google.protobuf.RpcCallback<com.example.fednclient.grpc.ModelValidationRequest> done) {
        impl.modelValidationRequestStream(controller, request, done);
      }

      @java.lang.Override
      public  void modelValidationStream(
          com.google.protobuf.RpcController controller,
          com.example.fednclient.grpc.ClientAvailableMessage request,
          com.google.protobuf.RpcCallback<com.example.fednclient.grpc.ModelValidation> done) {
        impl.modelValidationStream(controller, request, done);
      }

      @java.lang.Override
      public  void sendModelUpdateRequest(
          com.google.protobuf.RpcController controller,
          com.example.fednclient.grpc.ModelUpdateRequest request,
          com.google.protobuf.RpcCallback<com.example.fednclient.grpc.Response> done) {
        impl.sendModelUpdateRequest(controller, request, done);
      }

      @java.lang.Override
      public  void sendModelUpdate(
          com.google.protobuf.RpcController controller,
          com.example.fednclient.grpc.ModelUpdate request,
          com.google.protobuf.RpcCallback<com.example.fednclient.grpc.Response> done) {
        impl.sendModelUpdate(controller, request, done);
      }

      @java.lang.Override
      public  void sendModelValidationRequest(
          com.google.protobuf.RpcController controller,
          com.example.fednclient.grpc.ModelValidationRequest request,
          com.google.protobuf.RpcCallback<com.example.fednclient.grpc.Response> done) {
        impl.sendModelValidationRequest(controller, request, done);
      }

      @java.lang.Override
      public  void sendModelValidation(
          com.google.protobuf.RpcController controller,
          com.example.fednclient.grpc.ModelValidation request,
          com.google.protobuf.RpcCallback<com.example.fednclient.grpc.Response> done) {
        impl.sendModelValidation(controller, request, done);
      }

    };
  }

  public static com.google.protobuf.BlockingService
      newReflectiveBlockingService(final BlockingInterface impl) {
    return new com.google.protobuf.BlockingService() {
      public final com.google.protobuf.Descriptors.ServiceDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }

      public final com.google.protobuf.Message callBlockingMethod(
          com.google.protobuf.Descriptors.MethodDescriptor method,
          com.google.protobuf.RpcController controller,
          com.google.protobuf.Message request)
          throws com.google.protobuf.ServiceException {
        if (method.getService() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "Service.callBlockingMethod() given method descriptor for " +
            "wrong service type.");
        }
        switch(method.getIndex()) {
          case 0:
            return impl.modelUpdateRequestStream(controller, (com.example.fednclient.grpc.ClientAvailableMessage)request);
          case 1:
            return impl.modelUpdateStream(controller, (com.example.fednclient.grpc.ClientAvailableMessage)request);
          case 2:
            return impl.modelValidationRequestStream(controller, (com.example.fednclient.grpc.ClientAvailableMessage)request);
          case 3:
            return impl.modelValidationStream(controller, (com.example.fednclient.grpc.ClientAvailableMessage)request);
          case 4:
            return impl.sendModelUpdateRequest(controller, (com.example.fednclient.grpc.ModelUpdateRequest)request);
          case 5:
            return impl.sendModelUpdate(controller, (com.example.fednclient.grpc.ModelUpdate)request);
          case 6:
            return impl.sendModelValidationRequest(controller, (com.example.fednclient.grpc.ModelValidationRequest)request);
          case 7:
            return impl.sendModelValidation(controller, (com.example.fednclient.grpc.ModelValidation)request);
          default:
            throw new java.lang.AssertionError("Can't get here.");
        }
      }

      public final com.google.protobuf.Message
          getRequestPrototype(
          com.google.protobuf.Descriptors.MethodDescriptor method) {
        if (method.getService() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "Service.getRequestPrototype() given method " +
            "descriptor for wrong service type.");
        }
        switch(method.getIndex()) {
          case 0:
            return com.example.fednclient.grpc.ClientAvailableMessage.getDefaultInstance();
          case 1:
            return com.example.fednclient.grpc.ClientAvailableMessage.getDefaultInstance();
          case 2:
            return com.example.fednclient.grpc.ClientAvailableMessage.getDefaultInstance();
          case 3:
            return com.example.fednclient.grpc.ClientAvailableMessage.getDefaultInstance();
          case 4:
            return com.example.fednclient.grpc.ModelUpdateRequest.getDefaultInstance();
          case 5:
            return com.example.fednclient.grpc.ModelUpdate.getDefaultInstance();
          case 6:
            return com.example.fednclient.grpc.ModelValidationRequest.getDefaultInstance();
          case 7:
            return com.example.fednclient.grpc.ModelValidation.getDefaultInstance();
          default:
            throw new java.lang.AssertionError("Can't get here.");
        }
      }

      public final com.google.protobuf.Message
          getResponsePrototype(
          com.google.protobuf.Descriptors.MethodDescriptor method) {
        if (method.getService() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "Service.getResponsePrototype() given method " +
            "descriptor for wrong service type.");
        }
        switch(method.getIndex()) {
          case 0:
            return com.example.fednclient.grpc.ModelUpdateRequest.getDefaultInstance();
          case 1:
            return com.example.fednclient.grpc.ModelUpdate.getDefaultInstance();
          case 2:
            return com.example.fednclient.grpc.ModelValidationRequest.getDefaultInstance();
          case 3:
            return com.example.fednclient.grpc.ModelValidation.getDefaultInstance();
          case 4:
            return com.example.fednclient.grpc.Response.getDefaultInstance();
          case 5:
            return com.example.fednclient.grpc.Response.getDefaultInstance();
          case 6:
            return com.example.fednclient.grpc.Response.getDefaultInstance();
          case 7:
            return com.example.fednclient.grpc.Response.getDefaultInstance();
          default:
            throw new java.lang.AssertionError("Can't get here.");
        }
      }

    };
  }

  /**
   * <pre>
   * Stream endpoints for training/validation pub/sub
   * </pre>
   *
   * <code>rpc ModelUpdateRequestStream(.grpc.ClientAvailableMessage) returns (stream .grpc.ModelUpdateRequest);</code>
   */
  public abstract void modelUpdateRequestStream(
      com.google.protobuf.RpcController controller,
      com.example.fednclient.grpc.ClientAvailableMessage request,
      com.google.protobuf.RpcCallback<com.example.fednclient.grpc.ModelUpdateRequest> done);

  /**
   * <code>rpc ModelUpdateStream(.grpc.ClientAvailableMessage) returns (stream .grpc.ModelUpdate);</code>
   */
  public abstract void modelUpdateStream(
      com.google.protobuf.RpcController controller,
      com.example.fednclient.grpc.ClientAvailableMessage request,
      com.google.protobuf.RpcCallback<com.example.fednclient.grpc.ModelUpdate> done);

  /**
   * <code>rpc ModelValidationRequestStream(.grpc.ClientAvailableMessage) returns (stream .grpc.ModelValidationRequest);</code>
   */
  public abstract void modelValidationRequestStream(
      com.google.protobuf.RpcController controller,
      com.example.fednclient.grpc.ClientAvailableMessage request,
      com.google.protobuf.RpcCallback<com.example.fednclient.grpc.ModelValidationRequest> done);

  /**
   * <code>rpc ModelValidationStream(.grpc.ClientAvailableMessage) returns (stream .grpc.ModelValidation);</code>
   */
  public abstract void modelValidationStream(
      com.google.protobuf.RpcController controller,
      com.example.fednclient.grpc.ClientAvailableMessage request,
      com.google.protobuf.RpcCallback<com.example.fednclient.grpc.ModelValidation> done);

  /**
   * <code>rpc SendModelUpdateRequest(.grpc.ModelUpdateRequest) returns (.grpc.Response);</code>
   */
  public abstract void sendModelUpdateRequest(
      com.google.protobuf.RpcController controller,
      com.example.fednclient.grpc.ModelUpdateRequest request,
      com.google.protobuf.RpcCallback<com.example.fednclient.grpc.Response> done);

  /**
   * <code>rpc SendModelUpdate(.grpc.ModelUpdate) returns (.grpc.Response);</code>
   */
  public abstract void sendModelUpdate(
      com.google.protobuf.RpcController controller,
      com.example.fednclient.grpc.ModelUpdate request,
      com.google.protobuf.RpcCallback<com.example.fednclient.grpc.Response> done);

  /**
   * <code>rpc SendModelValidationRequest(.grpc.ModelValidationRequest) returns (.grpc.Response);</code>
   */
  public abstract void sendModelValidationRequest(
      com.google.protobuf.RpcController controller,
      com.example.fednclient.grpc.ModelValidationRequest request,
      com.google.protobuf.RpcCallback<com.example.fednclient.grpc.Response> done);

  /**
   * <code>rpc SendModelValidation(.grpc.ModelValidation) returns (.grpc.Response);</code>
   */
  public abstract void sendModelValidation(
      com.google.protobuf.RpcController controller,
      com.example.fednclient.grpc.ModelValidation request,
      com.google.protobuf.RpcCallback<com.example.fednclient.grpc.Response> done);

  public static final
      com.google.protobuf.Descriptors.ServiceDescriptor
      getDescriptor() {
    return com.example.fednclient.grpc.Fedn.getDescriptor().getServices().get(4);
  }
  public final com.google.protobuf.Descriptors.ServiceDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }

  public final void callMethod(
      com.google.protobuf.Descriptors.MethodDescriptor method,
      com.google.protobuf.RpcController controller,
      com.google.protobuf.Message request,
      com.google.protobuf.RpcCallback<
        com.google.protobuf.Message> done) {
    if (method.getService() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "Service.callMethod() given method descriptor for wrong " +
        "service type.");
    }
    switch(method.getIndex()) {
      case 0:
        this.modelUpdateRequestStream(controller, (com.example.fednclient.grpc.ClientAvailableMessage)request,
          com.google.protobuf.RpcUtil.<com.example.fednclient.grpc.ModelUpdateRequest>specializeCallback(
            done));
        return;
      case 1:
        this.modelUpdateStream(controller, (com.example.fednclient.grpc.ClientAvailableMessage)request,
          com.google.protobuf.RpcUtil.<com.example.fednclient.grpc.ModelUpdate>specializeCallback(
            done));
        return;
      case 2:
        this.modelValidationRequestStream(controller, (com.example.fednclient.grpc.ClientAvailableMessage)request,
          com.google.protobuf.RpcUtil.<com.example.fednclient.grpc.ModelValidationRequest>specializeCallback(
            done));
        return;
      case 3:
        this.modelValidationStream(controller, (com.example.fednclient.grpc.ClientAvailableMessage)request,
          com.google.protobuf.RpcUtil.<com.example.fednclient.grpc.ModelValidation>specializeCallback(
            done));
        return;
      case 4:
        this.sendModelUpdateRequest(controller, (com.example.fednclient.grpc.ModelUpdateRequest)request,
          com.google.protobuf.RpcUtil.<com.example.fednclient.grpc.Response>specializeCallback(
            done));
        return;
      case 5:
        this.sendModelUpdate(controller, (com.example.fednclient.grpc.ModelUpdate)request,
          com.google.protobuf.RpcUtil.<com.example.fednclient.grpc.Response>specializeCallback(
            done));
        return;
      case 6:
        this.sendModelValidationRequest(controller, (com.example.fednclient.grpc.ModelValidationRequest)request,
          com.google.protobuf.RpcUtil.<com.example.fednclient.grpc.Response>specializeCallback(
            done));
        return;
      case 7:
        this.sendModelValidation(controller, (com.example.fednclient.grpc.ModelValidation)request,
          com.google.protobuf.RpcUtil.<com.example.fednclient.grpc.Response>specializeCallback(
            done));
        return;
      default:
        throw new java.lang.AssertionError("Can't get here.");
    }
  }

  public final com.google.protobuf.Message
      getRequestPrototype(
      com.google.protobuf.Descriptors.MethodDescriptor method) {
    if (method.getService() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "Service.getRequestPrototype() given method " +
        "descriptor for wrong service type.");
    }
    switch(method.getIndex()) {
      case 0:
        return com.example.fednclient.grpc.ClientAvailableMessage.getDefaultInstance();
      case 1:
        return com.example.fednclient.grpc.ClientAvailableMessage.getDefaultInstance();
      case 2:
        return com.example.fednclient.grpc.ClientAvailableMessage.getDefaultInstance();
      case 3:
        return com.example.fednclient.grpc.ClientAvailableMessage.getDefaultInstance();
      case 4:
        return com.example.fednclient.grpc.ModelUpdateRequest.getDefaultInstance();
      case 5:
        return com.example.fednclient.grpc.ModelUpdate.getDefaultInstance();
      case 6:
        return com.example.fednclient.grpc.ModelValidationRequest.getDefaultInstance();
      case 7:
        return com.example.fednclient.grpc.ModelValidation.getDefaultInstance();
      default:
        throw new java.lang.AssertionError("Can't get here.");
    }
  }

  public final com.google.protobuf.Message
      getResponsePrototype(
      com.google.protobuf.Descriptors.MethodDescriptor method) {
    if (method.getService() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "Service.getResponsePrototype() given method " +
        "descriptor for wrong service type.");
    }
    switch(method.getIndex()) {
      case 0:
        return com.example.fednclient.grpc.ModelUpdateRequest.getDefaultInstance();
      case 1:
        return com.example.fednclient.grpc.ModelUpdate.getDefaultInstance();
      case 2:
        return com.example.fednclient.grpc.ModelValidationRequest.getDefaultInstance();
      case 3:
        return com.example.fednclient.grpc.ModelValidation.getDefaultInstance();
      case 4:
        return com.example.fednclient.grpc.Response.getDefaultInstance();
      case 5:
        return com.example.fednclient.grpc.Response.getDefaultInstance();
      case 6:
        return com.example.fednclient.grpc.Response.getDefaultInstance();
      case 7:
        return com.example.fednclient.grpc.Response.getDefaultInstance();
      default:
        throw new java.lang.AssertionError("Can't get here.");
    }
  }

  public static Stub newStub(
      com.google.protobuf.RpcChannel channel) {
    return new Stub(channel);
  }

  public static final class Stub extends com.example.fednclient.grpc.Combiner implements Interface {
    private Stub(com.google.protobuf.RpcChannel channel) {
      this.channel = channel;
    }

    private final com.google.protobuf.RpcChannel channel;

    public com.google.protobuf.RpcChannel getChannel() {
      return channel;
    }

    public  void modelUpdateRequestStream(
        com.google.protobuf.RpcController controller,
        com.example.fednclient.grpc.ClientAvailableMessage request,
        com.google.protobuf.RpcCallback<com.example.fednclient.grpc.ModelUpdateRequest> done) {
      channel.callMethod(
        getDescriptor().getMethods().get(0),
        controller,
        request,
        com.example.fednclient.grpc.ModelUpdateRequest.getDefaultInstance(),
        com.google.protobuf.RpcUtil.generalizeCallback(
          done,
          com.example.fednclient.grpc.ModelUpdateRequest.class,
          com.example.fednclient.grpc.ModelUpdateRequest.getDefaultInstance()));
    }

    public  void modelUpdateStream(
        com.google.protobuf.RpcController controller,
        com.example.fednclient.grpc.ClientAvailableMessage request,
        com.google.protobuf.RpcCallback<com.example.fednclient.grpc.ModelUpdate> done) {
      channel.callMethod(
        getDescriptor().getMethods().get(1),
        controller,
        request,
        com.example.fednclient.grpc.ModelUpdate.getDefaultInstance(),
        com.google.protobuf.RpcUtil.generalizeCallback(
          done,
          com.example.fednclient.grpc.ModelUpdate.class,
          com.example.fednclient.grpc.ModelUpdate.getDefaultInstance()));
    }

    public  void modelValidationRequestStream(
        com.google.protobuf.RpcController controller,
        com.example.fednclient.grpc.ClientAvailableMessage request,
        com.google.protobuf.RpcCallback<com.example.fednclient.grpc.ModelValidationRequest> done) {
      channel.callMethod(
        getDescriptor().getMethods().get(2),
        controller,
        request,
        com.example.fednclient.grpc.ModelValidationRequest.getDefaultInstance(),
        com.google.protobuf.RpcUtil.generalizeCallback(
          done,
          com.example.fednclient.grpc.ModelValidationRequest.class,
          com.example.fednclient.grpc.ModelValidationRequest.getDefaultInstance()));
    }

    public  void modelValidationStream(
        com.google.protobuf.RpcController controller,
        com.example.fednclient.grpc.ClientAvailableMessage request,
        com.google.protobuf.RpcCallback<com.example.fednclient.grpc.ModelValidation> done) {
      channel.callMethod(
        getDescriptor().getMethods().get(3),
        controller,
        request,
        com.example.fednclient.grpc.ModelValidation.getDefaultInstance(),
        com.google.protobuf.RpcUtil.generalizeCallback(
          done,
          com.example.fednclient.grpc.ModelValidation.class,
          com.example.fednclient.grpc.ModelValidation.getDefaultInstance()));
    }

    public  void sendModelUpdateRequest(
        com.google.protobuf.RpcController controller,
        com.example.fednclient.grpc.ModelUpdateRequest request,
        com.google.protobuf.RpcCallback<com.example.fednclient.grpc.Response> done) {
      channel.callMethod(
        getDescriptor().getMethods().get(4),
        controller,
        request,
        com.example.fednclient.grpc.Response.getDefaultInstance(),
        com.google.protobuf.RpcUtil.generalizeCallback(
          done,
          com.example.fednclient.grpc.Response.class,
          com.example.fednclient.grpc.Response.getDefaultInstance()));
    }

    public  void sendModelUpdate(
        com.google.protobuf.RpcController controller,
        com.example.fednclient.grpc.ModelUpdate request,
        com.google.protobuf.RpcCallback<com.example.fednclient.grpc.Response> done) {
      channel.callMethod(
        getDescriptor().getMethods().get(5),
        controller,
        request,
        com.example.fednclient.grpc.Response.getDefaultInstance(),
        com.google.protobuf.RpcUtil.generalizeCallback(
          done,
          com.example.fednclient.grpc.Response.class,
          com.example.fednclient.grpc.Response.getDefaultInstance()));
    }

    public  void sendModelValidationRequest(
        com.google.protobuf.RpcController controller,
        com.example.fednclient.grpc.ModelValidationRequest request,
        com.google.protobuf.RpcCallback<com.example.fednclient.grpc.Response> done) {
      channel.callMethod(
        getDescriptor().getMethods().get(6),
        controller,
        request,
        com.example.fednclient.grpc.Response.getDefaultInstance(),
        com.google.protobuf.RpcUtil.generalizeCallback(
          done,
          com.example.fednclient.grpc.Response.class,
          com.example.fednclient.grpc.Response.getDefaultInstance()));
    }

    public  void sendModelValidation(
        com.google.protobuf.RpcController controller,
        com.example.fednclient.grpc.ModelValidation request,
        com.google.protobuf.RpcCallback<com.example.fednclient.grpc.Response> done) {
      channel.callMethod(
        getDescriptor().getMethods().get(7),
        controller,
        request,
        com.example.fednclient.grpc.Response.getDefaultInstance(),
        com.google.protobuf.RpcUtil.generalizeCallback(
          done,
          com.example.fednclient.grpc.Response.class,
          com.example.fednclient.grpc.Response.getDefaultInstance()));
    }
  }

  public static BlockingInterface newBlockingStub(
      com.google.protobuf.BlockingRpcChannel channel) {
    return new BlockingStub(channel);
  }

  public interface BlockingInterface {
    public com.example.fednclient.grpc.ModelUpdateRequest modelUpdateRequestStream(
        com.google.protobuf.RpcController controller,
        com.example.fednclient.grpc.ClientAvailableMessage request)
        throws com.google.protobuf.ServiceException;

    public com.example.fednclient.grpc.ModelUpdate modelUpdateStream(
        com.google.protobuf.RpcController controller,
        com.example.fednclient.grpc.ClientAvailableMessage request)
        throws com.google.protobuf.ServiceException;

    public com.example.fednclient.grpc.ModelValidationRequest modelValidationRequestStream(
        com.google.protobuf.RpcController controller,
        com.example.fednclient.grpc.ClientAvailableMessage request)
        throws com.google.protobuf.ServiceException;

    public com.example.fednclient.grpc.ModelValidation modelValidationStream(
        com.google.protobuf.RpcController controller,
        com.example.fednclient.grpc.ClientAvailableMessage request)
        throws com.google.protobuf.ServiceException;

    public com.example.fednclient.grpc.Response sendModelUpdateRequest(
        com.google.protobuf.RpcController controller,
        com.example.fednclient.grpc.ModelUpdateRequest request)
        throws com.google.protobuf.ServiceException;

    public com.example.fednclient.grpc.Response sendModelUpdate(
        com.google.protobuf.RpcController controller,
        com.example.fednclient.grpc.ModelUpdate request)
        throws com.google.protobuf.ServiceException;

    public com.example.fednclient.grpc.Response sendModelValidationRequest(
        com.google.protobuf.RpcController controller,
        com.example.fednclient.grpc.ModelValidationRequest request)
        throws com.google.protobuf.ServiceException;

    public com.example.fednclient.grpc.Response sendModelValidation(
        com.google.protobuf.RpcController controller,
        com.example.fednclient.grpc.ModelValidation request)
        throws com.google.protobuf.ServiceException;
  }

  private static final class BlockingStub implements BlockingInterface {
    private BlockingStub(com.google.protobuf.BlockingRpcChannel channel) {
      this.channel = channel;
    }

    private final com.google.protobuf.BlockingRpcChannel channel;

    public com.example.fednclient.grpc.ModelUpdateRequest modelUpdateRequestStream(
        com.google.protobuf.RpcController controller,
        com.example.fednclient.grpc.ClientAvailableMessage request)
        throws com.google.protobuf.ServiceException {
      return (com.example.fednclient.grpc.ModelUpdateRequest) channel.callBlockingMethod(
        getDescriptor().getMethods().get(0),
        controller,
        request,
        com.example.fednclient.grpc.ModelUpdateRequest.getDefaultInstance());
    }


    public com.example.fednclient.grpc.ModelUpdate modelUpdateStream(
        com.google.protobuf.RpcController controller,
        com.example.fednclient.grpc.ClientAvailableMessage request)
        throws com.google.protobuf.ServiceException {
      return (com.example.fednclient.grpc.ModelUpdate) channel.callBlockingMethod(
        getDescriptor().getMethods().get(1),
        controller,
        request,
        com.example.fednclient.grpc.ModelUpdate.getDefaultInstance());
    }


    public com.example.fednclient.grpc.ModelValidationRequest modelValidationRequestStream(
        com.google.protobuf.RpcController controller,
        com.example.fednclient.grpc.ClientAvailableMessage request)
        throws com.google.protobuf.ServiceException {
      return (com.example.fednclient.grpc.ModelValidationRequest) channel.callBlockingMethod(
        getDescriptor().getMethods().get(2),
        controller,
        request,
        com.example.fednclient.grpc.ModelValidationRequest.getDefaultInstance());
    }


    public com.example.fednclient.grpc.ModelValidation modelValidationStream(
        com.google.protobuf.RpcController controller,
        com.example.fednclient.grpc.ClientAvailableMessage request)
        throws com.google.protobuf.ServiceException {
      return (com.example.fednclient.grpc.ModelValidation) channel.callBlockingMethod(
        getDescriptor().getMethods().get(3),
        controller,
        request,
        com.example.fednclient.grpc.ModelValidation.getDefaultInstance());
    }


    public com.example.fednclient.grpc.Response sendModelUpdateRequest(
        com.google.protobuf.RpcController controller,
        com.example.fednclient.grpc.ModelUpdateRequest request)
        throws com.google.protobuf.ServiceException {
      return (com.example.fednclient.grpc.Response) channel.callBlockingMethod(
        getDescriptor().getMethods().get(4),
        controller,
        request,
        com.example.fednclient.grpc.Response.getDefaultInstance());
    }


    public com.example.fednclient.grpc.Response sendModelUpdate(
        com.google.protobuf.RpcController controller,
        com.example.fednclient.grpc.ModelUpdate request)
        throws com.google.protobuf.ServiceException {
      return (com.example.fednclient.grpc.Response) channel.callBlockingMethod(
        getDescriptor().getMethods().get(5),
        controller,
        request,
        com.example.fednclient.grpc.Response.getDefaultInstance());
    }


    public com.example.fednclient.grpc.Response sendModelValidationRequest(
        com.google.protobuf.RpcController controller,
        com.example.fednclient.grpc.ModelValidationRequest request)
        throws com.google.protobuf.ServiceException {
      return (com.example.fednclient.grpc.Response) channel.callBlockingMethod(
        getDescriptor().getMethods().get(6),
        controller,
        request,
        com.example.fednclient.grpc.Response.getDefaultInstance());
    }


    public com.example.fednclient.grpc.Response sendModelValidation(
        com.google.protobuf.RpcController controller,
        com.example.fednclient.grpc.ModelValidation request)
        throws com.google.protobuf.ServiceException {
      return (com.example.fednclient.grpc.Response) channel.callBlockingMethod(
        getDescriptor().getMethods().get(7),
        controller,
        request,
        com.example.fednclient.grpc.Response.getDefaultInstance());
    }

  }

  // @@protoc_insertion_point(class_scope:grpc.Combiner)
}

