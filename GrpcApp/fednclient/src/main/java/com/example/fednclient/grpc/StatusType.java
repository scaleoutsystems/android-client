// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: fedn.proto

package com.example.fednclient.grpc;

/**
 * Protobuf enum {@code grpc.StatusType}
 */
public enum StatusType
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>LOG = 0;</code>
   */
  LOG(0),
  /**
   * <code>MODEL_UPDATE_REQUEST = 1;</code>
   */
  MODEL_UPDATE_REQUEST(1),
  /**
   * <code>MODEL_UPDATE = 2;</code>
   */
  MODEL_UPDATE(2),
  /**
   * <code>MODEL_VALIDATION_REQUEST = 3;</code>
   */
  MODEL_VALIDATION_REQUEST(3),
  /**
   * <code>MODEL_VALIDATION = 4;</code>
   */
  MODEL_VALIDATION(4),
  /**
   * <code>INFERENCE = 5;</code>
   */
  INFERENCE(5),
  UNRECOGNIZED(-1),
  ;

  /**
   * <code>LOG = 0;</code>
   */
  public static final int LOG_VALUE = 0;
  /**
   * <code>MODEL_UPDATE_REQUEST = 1;</code>
   */
  public static final int MODEL_UPDATE_REQUEST_VALUE = 1;
  /**
   * <code>MODEL_UPDATE = 2;</code>
   */
  public static final int MODEL_UPDATE_VALUE = 2;
  /**
   * <code>MODEL_VALIDATION_REQUEST = 3;</code>
   */
  public static final int MODEL_VALIDATION_REQUEST_VALUE = 3;
  /**
   * <code>MODEL_VALIDATION = 4;</code>
   */
  public static final int MODEL_VALIDATION_VALUE = 4;
  /**
   * <code>INFERENCE = 5;</code>
   */
  public static final int INFERENCE_VALUE = 5;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static StatusType valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static StatusType forNumber(int value) {
    switch (value) {
      case 0: return LOG;
      case 1: return MODEL_UPDATE_REQUEST;
      case 2: return MODEL_UPDATE;
      case 3: return MODEL_VALIDATION_REQUEST;
      case 4: return MODEL_VALIDATION;
      case 5: return INFERENCE;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<StatusType>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      StatusType> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<StatusType>() {
          public StatusType findValueByNumber(int number) {
            return StatusType.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.example.fednclient.grpc.Fedn.getDescriptor().getEnumTypes().get(0);
  }

  private static final StatusType[] VALUES = values();

  public static StatusType valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private StatusType(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:grpc.StatusType)
}

